apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'signing'

def pluginVersion = "2.3"

group = /*'com.github.comsince'*/'com.meizu.flyme.internet'
version = pluginVersion

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

// Create the pom configuration:
def pomConfig = {

    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
        }
    }
    developers {
        developer {
            id "${bintray_developerId}"
            name "${bintray_developerName}"
            email "${bintray_developerEmail}"
        }
    }

    scm {
        connection "${bintray_vcsUrl}"
        developerConnection "${bintray_vcsUrl}"
        url "${bintray_vcsUrl}"
    }
}

/*def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'
tasks.withType(Javadoc) {
    options.links(javaApiUrl, groovyApiUrl)
}*/

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.getResources()
    classifier = 'sources'
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}



publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId /*'com.github.comsince'*//*'com.meizu.flyme.internet'*/group
            artifactId 'publish-plugin'
            version pluginVersion
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'gradle plugin for publish to jcenter and MavenCentral')
                root.appendNode('name', 'publish-plugin')
                root.appendNode('url', "${bintray_vcsUrl}")
                root.children().last() + pomConfig
            }
            artifact javadocJar
            artifact sourcesJar
        }
    }
}

// for local maven publish
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            repository(url: uri('../.repo'))
//        }
//    }
//}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description 'publish plugin'
                url 'https://github.com/comsince/Gradle_Plugin_For_Publish.git'

                scm {
                    url 'https://github.com/comsince/Gradle_Plugin_For_Publish.git'
                    connection 'https://github.com/comsince/Gradle_Plugin_For_Publish.git'
                    developerConnection 'https://github.com/comsince/Gradle_Plugin_For_Publish.git'
                }

                licenses {
                    license {
                        name 'MIT Licence'
                        url 'https://github.com/comsince/Gradle_Plugin_For_Publish.git'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'comsince'
                        name 'comsince'
                        email 'ljlong_2008@126.com'
                    }
                }
            }
        }
    }
}


bintray {
    user = "${bintray_user}"
    key = "${bintray_apikey}"
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = "${bintray_repo}"
        name = "${bintray_name}"
        userOrg = "${bintray_userOrg}"
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/comsince/Gradle_Plugin_For_Publish.git'
        labels = ['gradle', 'jcenter', 'publish']
        publicDownloadNumbers = true
        version {
            name = pluginVersion
            desc = 'Gradle Bintray Plugin For Publish'
            vcsTag = pluginVersion
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = "${bintray_gpgPassword}"
                //Optional. The passphrase for GPG signing'
            }
            mavenCentralSync {
                sync = true //[Default: true] Determines whether to sync the version to Maven Central.
                user =  "${oss_user}"//OSS user token: mandatory
                password = "${oss_password}" //OSS user password: mandatory
                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
            }
        }
    }
}


artifactory {
    String artUrl = 'https://oss.jfrog.org/artifactory'
    String artRepoKey = 'oss-snapshot-local'
    logger.quiet "current artifactory url ${artUrl} repo key ${artRepoKey}"
    contextUrl = artUrl
    publish {
        repository {
            // The Artifactory repository key to publish to
            repoKey = artRepoKey

            username = "${bintray_user}"
            password = "${bintray_apikey}"
        }
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true

            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}



apply plugin: 'groovy'

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
    compile "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
}


repositories {
    jcenter()

}

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6


